// mB v8.2.5 on 2020-02-25T23:33:56.592Z
export class httpRPC{constructor(httpOrs,host,port){this.user='',this.pswd='',this.token='',this.DEBUG=!1,this.httpOrs=httpOrs,this.host=host,this.port=port}setUser(user,pswd){this.user=user,this.pswd=pswd}setToken(token){this.token=token}invoke(route,method,params,timeout){timeout||(timeout=2e3),params||(params={}),params.method=method,params.user=btoa(this.user),params.pswd=btoa(this.pswd),params.token=btoa(this.token),params.view=window.location.href;var str=JSON.stringify(params);const THIZ=this,pro1=new Promise((function(resolve,reject){let url=THIZ.httpOrs+'://'+THIZ.host+(THIZ.port?':'+THIZ.port:'')+'/'+route;url=url+'/?p='+LZString.compressToEncodedURIComponent(str),fetch(url,{method:'GET',cache:'default',redirect:'follow',mode:'cors',keepalive:!0}).then((function(fullResp){if(fullResp.ok)return fullResp.text();reject('HTTP protocol error in RPC: '+fullResp.status+fullResp)})).then((function(str){var resp=JSON.parse(str);resp&&!resp.errorMessage||reject(method+' '+str),resolve(resp.result)})).catch((function(err){reject(method+' '+err)}))})),pro2=new Promise((function(resolve,reject){setTimeout(()=>reject('timeout'),timeout)}));return Promise.race([pro1,pro2])}setItem(key,val){sessionStorage.setItem(key,val)}getItem(key){return sessionStorage.getItem(key)}log(msg,level,className){var THIZ=this;let p={msg,page:window.location.pathname,level,className};try{window.ENV&&(p.ENV=window.ENV),p.view=window.location.href,p.appVersion=btoa(navigator.appVersion),p.userAgent=btoa(navigator.userAgent),p.platform=btoa(navigator.platform)}catch(err){}setTimeout((function(){THIZ.invoke('log','log',p)}),1)}}