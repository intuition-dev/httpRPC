// mB v8.2.1 on 2020-02-21T14:42:16.364Z
class httpRPC{constructor(t,e,o){this.user="",this.pswd="",this.token="",this.DEBUG=!1,this.httpOrs=t,this.host=e,this.port=o}setUser(t,e){this.user=t,this.pswd=e}setToken(t){this.token=t}invoke(t,e,o,s){s||(s=2e3),o||(o={}),o.method=e,o.user=btoa(this.user),o.pswd=btoa(this.pswd),o.token=btoa(this.token),o.view=window.location.href
var r=JSON.stringify(o),i=LZString.compressToEncodedURIComponent(r)
const n=this,a=new Promise((function(o,s){let r=n.httpOrs+"://"+n.host+(n.port?":"+n.port:"")+"/"+t
r=r+"/?p="+i,fetch(r,{method:"GET",cache:"default",redirect:"follow",mode:"cors",keepalive:!0}).then((function(t){if(t.ok)return t.text()
s("HTTP protocol error in RPC: "+t.status+t)})).then((function(t){var r=JSON.parse(t)
r&&!r.errorMessage||s(e+" "+t),o(r.result)})).catch((function(t){s(e+" "+t)}))})),h=new Promise((function(t,e){setTimeout(()=>e("timeout"),s)}))
return Promise.race([a,h])}setItem(t,e){sessionStorage.setItem(t,e)}getItem(t){return sessionStorage.getItem(t)}log(t,e,o){var s=this
let r={msg:t,page:window.location.pathname,level:e,className:o}
try{window.ENV&&(r.ENV=window.ENV),r.view=window.location.href,r.appVersion=btoa(navigator.appVersion),r.userAgent=btoa(navigator.userAgent),r.platform=btoa(navigator.platform)}catch(t){}setTimeout((function(){s.invoke("log","log",r)}),1)}}